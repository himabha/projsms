<?php

namespace app\controllers;

use Yii;
use yii\data\ActiveDataProvider;
use yii\filters\AccessControl;
use app\models\Fsmastertb;
use app\models\Fsusertb;
use yii\web\UploadedFile;
use yii\filters\ContentNegotiator;
use yii\web\Response;
use app\models\User;
use app\models\Fscdr;
use yii\filters\VerbFilter;
use yii\web\NotFoundHttpException;
use yii\web\ForbiddenHttpException;
use app\models\FsusertbSearch;
use app\models\FsmastertbSearch;
use app\models\Fsmycdr;
use yii\helpers\ArrayHelper;
use yii\db\Query;
use app\models\Fscallreport;

class ResellerController extends \yii\web\Controller
{
	public function behaviors()
	{
		return [
            'contentNegotiator' => [
                'class' => ContentNegotiator::className(),
                'only' => ['check-callsend','load-search-fields'],
                'formats' => [
                    'application/json' => Response::FORMAT_JSON,
                    'application/xml' => Response::FORMAT_XML,
                ],
            ],
            'access' => [
                'class' => AccessControl::className(),
                'only' => ['add-user','delete-user','cdr','list-user','edit-user','date-report','detach-number','show-number-routes','fs-call-report','export-fscall','agent-summary','export-agent-summary','load-search-fields'],
                'rules' => [
                   [
                      'actions' => ['add-user','delete-user','cdr','list-user','edit-user','date-report','detach-number','show-number-routes','fs-call-report','export-fscall','agent-summary','export-agent-summary','load-search-fields'],
                      'allow' => true,
                      'roles' => ['@'],
                      'matchCallback' =>function ($rule, $action) {
                         return User::isReseller(Yii::$app->user->identity->id);
                     },

                 ],
             ],
         ],
         'verbs' => [
            'class' => VerbFilter::className(),
            'actions' => [
                'delete-cld' => ['post'],
            ],
        ],
    ];
}


    /*
    * Add user
    */
    public function actionAddUser()
    {
    	$flag = 0;
    	$user = new User();
    	if ($user->load(Yii::$app->request->post())) {
    		$id = $user->getIdValue();
            $user->id = $id;
            $user->setResellerId(Yii::$app->user->identity->id);
            $user->setPassword($user->password);
            $user->role=2;
            if ($user->save()) {
                $user = new User();
                $model = new Fsusertb();
                Yii::$app->session->setFlash('user_add_success', "User added successfully.");
            } else {
                $user->password = "";
                Yii::$app->session->setFlash('user_add_failed', "Failed to save detail try again.");
            }
        }
        return $this->render('add_user',['user'=>$user]);
    }

    /*
    * List all Users
    */
    public function actionListUser()
    {
        $name = isset($_GET['name']) ? $_GET['name'] : '';
        $query = User::find()->where(['role' => 2, 'reseller_id' => Yii::$app->user->identity->id]);
        $dataProvider = new ActiveDataProvider([
            'query' => $query,
            'pagination' => [
                'pageSize' => 100,
            ],
        ]);

        $query->andFilterWhere(['like', 'username', $name]);

        return $this->render('list_user',['dataProvider' => $dataProvider,'name' => $name]);
    }

    /*
    * Assign cld number to user
    */
    public function actionAssignNumber()
    {
        $user = Yii::$app->request->post('user');
        $numbers = explode(",", Yii::$app->request->post('numbers'));

        foreach ($numbers as $key => $value) {

            $usertbmodel = new Fsusertb();
            $usertbmodel->cld1 = $value;
            $usertbmodel->user_id = $user;
            $usertbmodel->assigned_date = date("Y-m-d H:i:s");
            $usertbmodel->save();

        }
        Yii::$app->session->setFlash('cld_added', "Assigned successfully");

    }

    /*
    * Edit User
    */
    public function actionEditUser($id)
    {
        $model = User::findOne($id);
        if (!$model) {
            throw new NotFoundHttpException('The requested user does not exist.');
        }
        if ($model->load(Yii::$app->request->post())) {
            if (!empty($model->edit_pas)) {
                $model->setPassword($model->edit_pas);
            }
            if ($model->save()) {
                return $this->redirect(['list-user']);
            } else {
                throw new ForbiddenHttpException('Failed to save details. Try again.');
            }
        }
        return $this->render('edit_user',['user' => $model]);
    }

    /*
    * Delete user details
    */
    public function actionDeleteUser($id)
    {
        $flag = true;
        $model = User::findOne($id);
        if (!$model) {
            throw new NotFoundHttpException('The requested user does not exist.');
        }
        $db = Yii::$app->db;
        $transaction = $db->beginTransaction();

        $fsusers = Fsusertb::find()->where(['user_id' => $id])->all();
        if ($fsusers) {
            foreach ($fsusers as $fsuser) {
                if (!$fsuser->delete()) {
                    $flag = false;
                    break;
                }
            }
        }
        if ($flag) {
            if (!$model->delete()) {
                $flag = false;
            }
        }

        if($flag){
            $transaction->commit();
            return $this->redirect(['list-user']);
        } else {
            $transaction->rollBack();
            throw new ForbiddenHttpException('Failed to delete user Try again.');
        }
    }

    /*
    * Show CDR details
    */

    public function actionCdr()
    {
        $date_range = isset($_GET['date_range']) ? $_GET['date_range'] : '';
        $caller_id = isset($_GET['caller_id']) ? $_GET['caller_id'] : '';
        $called_no = isset($_GET['called_no']) ? $_GET['called_no'] : '';

        if (strpos($date_range," - ") == FALSE) {
            $start = date('Y-m-d');
            $end = date('Y-m-d');
        } else {
            $date = explode(" - ", $date_range);
            $start = $date[0];
            $end = $date[1];
        }
        $startT = $start.' 00:01:00';
        $endT = $end.' 23:59:00';

        $query = Fsmycdr::find()
        ->select(['call_startdate','ani','called_number' , 'cld1' ,'country' , 'call_duration', '(cld1_ratepersec * (call_duration/60)) AS Charges', '(cld2_ratepersec * (call_duration/60)) AS Cost', 'agent_id'])
        ->innerJoin('user', '`user`.`id` = `fsmycdr`.`agent_id`')
        ->where(['between', 'call_startdate', $startT, $endT])
        ->with(['user'])
        ->andWhere(['=', 'user.reseller_id', Yii::$app->user->identity->id]);

        $date = $start.' - '.$end;

        $dataProvider = new ActiveDataProvider([
            'query' => $query,
            'pagination' => [
                'pageSize' => 100,
            ],
        ]);
        $query->andFilterWhere(['like','ani' , $caller_id])
        ->andFilterWhere(['like','called_number' , $called_no]);
        $query1 = $query;

        $value['count'] = $query1->count();

        $min_sum = $query1->sum('call_duration');
        $value['min_sum'] = round($min_sum/60,2);
        $value['revenue'] = $query1->sum('((call_duration/60)*cld2_ratepersec) + ((call_duration/60)*cld1_ratepersec)');

        $query = $query->orderBy(['call_startdate' => SORT_DESC]);

        return $this->render('cdr',['dataProvider' => $dataProvider,'date' => $date,'value' => $value,'caller_id' => $caller_id,'called_no' => $called_no]);
    }

    /*
    * Datewise connected call report
    */
    public function actionDateReport()
    {
        $date_range = isset($_GET['date_range']) ? $_GET['date_range'] : date('Y-m-d',strtotime("-6 days"))." to ".date('Y-m-d');

        if (strpos($date_range, " to ") !== FALSE) {
            $date = explode(" to ", $date_range);
            $start = $date[0]." 00:00:00";
            $end = $date[1]." 23:59:59";
        } else {
            $start = date('Y-m-d',strtotime("-6 days"))." 00:00:00";
            $end = date('Y-m-d')." 23:59:59";
        }
        $dataProvider = new \yii\data\SqlDataProvider([
            'sql' => "SELECT DATE_FORMAT(call_getdate, '%d-%m-%Y') AS `date`,COUNT(*) as call_count, SUM(`call_duration`) as minute,sum(((call_duration/60)*cld2_ratepersec) + ((cld1_ratepersec/60)*call_duration)) as sum FROM `fscdr` join user on user.id = fscdr.agent_id WHERE `fsmid` !='' AND `call_getdate` BETWEEN '$start' AND '$end' and user.reseller_id = ".Yii::$app->user->identity->id ." GROUP BY DATE_FORMAT(call_getdate, '%d-%m-%Y') ORDER BY `call_getdate` DESC",
            'pagination' => [
                'pageSize' => 100,
            ],
        ]);

        $sql = "SELECT COUNT(*) as call_count, SUM(`call_duration`) as minute,sum(((call_duration/60)*cld2_ratepersec) + ((cld1_ratepersec/60)*call_duration)) as sum FROM `fscdr` join user on user.id = fscdr.agent_id WHERE `fsmid` !='' AND `call_getdate` BETWEEN '".$start."' AND '".$end."' and user.reseller_id = ".Yii::$app->user->identity->id;

        $result = Fscdr::findBySql($sql)->one();

        if ($result) {
            $connected_calls = $result->call_count;
            $minutes = round($result->minute/60,2);
            $total_cost = round($result->sum,4);
        } else {
            $connected_calls = 0;
            $minutes = 0;
            $total_cost = 0;
        }

        return $this->render('date_wise_report',['dataProvider' => $dataProvider,'date_range' => $date_range,'connected_calls' => $connected_calls,'minutes' => $minutes,'total_cost' => $total_cost]);
    }

    public function actionExportData()
    {
        ini_set('memory_limit', '-1');

        $date_range = isset($_GET['export_date']) ? $_GET['export_date'] : '';
        $caller_id = isset($_GET['export_caller_id']) ? $_GET['export_caller_id'] : '';
        $called_no = isset($_GET['export_called_no']) ? $_GET['export_called_no'] : '';

        if (strpos($date_range," - ") == FALSE) {
            $start = date('Y-m-d');
            $end = date('Y-m-d');
        } else {
            $date = explode(" - ", $date_range);
            $start = $date[0];
            $end = $date[1];
        }
        $startT = $start.' 00:01:00';
        $endT = $end.' 23:59:00';

        $query = Fsmycdr::find()
        ->select(['call_startdate','ani','called_number' , 'cld1' ,'country' , 'call_duration', '(cld1_ratepersec * (call_duration/60)) AS Charges', '(cld2_ratepersec * (call_duration/60)) AS Cost', 'agent_id'])
        ->innerJoin('user', '`user`.`id` = `fsmycdr`.`agent_id`')
        ->where(['between', 'call_startdate', $startT, $endT])
        ->with(['user'])
        ->andWhere(['=', 'user.reseller_id', Yii::$app->user->identity->id]);

        if (!empty($caller_id)) {
            $query = $query->andWhere(['like','ani' , $caller_id]);
        }

        if (!empty($called_no)) {
           $query = $query->andWhere(['like','called_number' , $called_no]);
        }

        $query = $query->orderBy(['call_startdate' => SORT_DESC])->all();


        if ($query) {

            $filename = "data_sheet.xls";
            header("Content-Type: application/vnd.ms-excel");
            header("Content-Disposition: attachment; filename=\"$filename\"");

            echo 'call_startdate'."\t".'ani'."\t".'called_number'."\t".'country'."\t".'Call Duration'."\t".'Charges'."\t".'Cost'."\t".'Margin'."\n";
            if($query)
              foreach($query as $value) {

                echo $value->call_startdate."\t".$value->ani."\t".$value->called_number."\t".$value->country."\t".round($value->call_duration/60,2)."\t".$value->Charges."\t".$value->Cost."\t".round($value->Charges - $value->Cost, 4)."\n";
            }
            exit;
        } else {
            return $this->redirect(['cdr']);
        }
    }

    /*
    * Show all assigned number to a user
    */
    public function actionShowAssigned()
    {
        $model = new Fsusertb();
        $userId = isset($_GET['user_id']) ? $_GET['user_id'] : '';
        $cld1 = isset($_GET['cld1']) ?  $_GET['cld1']  : '';

        $query = Fsusertb::find()->where(['closing_date' => NULL]);

        $dataProvider = new ActiveDataProvider([
            'query' => $query,
            'pagination' => [
                'pageSize' => 100,
            ],
        ]);

        $query->andFilterWhere(['like','cld1' , $cld1]);
        $query->andFilterWhere(['user_id' =>  $userId]);

        $users = $model->getUserList();

        return $this->render('detach_number',['dataProvider' => $dataProvider,'users' => $users,'userId' => $userId,'cld1' => $cld1]);
    }

    /*
    * Detach an assigned number from a user
    */
    public function actionDetachNumber()
    {
        $id = Yii::$app->request->post('btn_id');
        $model = Fsusertb::findOne($id);
        if (!$model) {
            throw new NotFoundHttpException('The requested number does not exist.');
        }
        $model->closing_date = date('Y-m-d H:i:s');
        if ($model->save()) {
            return $this->redirect(['show-assigned']);
        } else {
            throw new ForbiddenHttpException('Failed to detach number, Try again.');
        }
    }

    /*
    * Check calls send to this number
    * Input fsuser table id
    */
    public function actionCheckCallsend()
    {
        $id = Yii::$app->request->post('id');
        $model = Fsusertb::findOne($id);
        if (!$model) {
            return [
                'error' => true,
                'message' => 'Data not available.'
            ];
        }
        //['>=','call_startdate',$cld->assigned_date]
        $fscdr = Fscdr::find()->where(['>=','call_startdate',$model->assigned_date])->sum('call_duration');
        return [
            'error' => false,
            'message' => 'Total of '.round($fscdr/60,2).' Minutes has been made through this number. Are you sure want to detach?.',
        ];
    }

    /*
    * List of all users who holds a specific number
    */
    public function actionShowNumberRoutes($id)
    {
        $model = Fsmastertb::find()->where(['fsmid' => $id])->one();
        if (!$model) {
            throw new NotFoundHttpException('The requested page does not exist.');
        }

        $dataProvider = new ActiveDataProvider([
            'query' => Fsusertb::find()->where(['cld1' => $model->cld1])->orderBy(['closing_date' => 'SORT_DESC']),
            'pagination' => [
                'pageSize' => 100,
            ],
        ]);

        return $this->render('number_routes',['dataProvider' => $dataProvider]);

    }

    public function actionFsCallReport()
    {
        $agent_id = isset($_GET['agent']) ? $_GET['agent'] : '';
        $country_name = isset($_GET['country']) ? $_GET['country'] : '';
        $caller_id = isset($_GET['caller_id']) ? $_GET['caller_id'] : '';
        $cld_1 = isset($_GET['cld1']) ? $_GET['cld1'] : '';
        $cld1_rate = isset($_GET['cld1_rate']) ? $_GET['cld1_rate'] : '';
        $cld2_rate = isset($_GET['cld2_rate']) ? $_GET['cld2_rate'] : '';
        $date_range = isset($_GET['date_range']) ? $_GET['date_range'] : '';
        $called_num = isset($_GET['called_num']) ? $_GET['called_num'] : '';

        if (!empty($date_range) && strlen($date_range) > 2) {
            if (strpos($date_range, ' - ') !== false) {
                $date = explode(' - ', $date_range);
            } else {
                $date = explode('-', $date_range);
            }

            $start = $date[0];
            $end = $date[1];


        } else {
            $start = date('Y-m-d');
            $end = date('Y-m-d');

        }
        $Datepickr = $start.' - '.$end;
        $mysubusr = User::find()->select('id')->where(['reseller_id' => Yii::$app->user->identity->id]);
        $query = Fscallreport::find()
        ->where([ 'agent_id' => $mysubusr]);

        $dataProvider = new ActiveDataProvider([
            'query' => $query,
            'pagination' => [
                'pageSize' => 100,
            ],
        ]);

        $query->andFilterWhere([
            'agent_id' => $agent_id,
            'Country' => $country_name,
            'Caller_ID' => $caller_id,
            'Cld1' => $cld_1,
        ]);
        $query->andFilterWhere(['like','Cld1_Rate' , $cld1_rate])
        ->andFilterWhere(['like', 'Cld2_Rate', $cld2_rate])
        ->andFilterWhere(['like', 'called_number', $called_num]);

        //echo $query->createCommand()->getRawSql(); exit();

        //if ($flag) {
        $query->andFilterWhere(['between', 'Date', $start.' 00:00:00',$end.' 23:59:59']);
        //}


        $totalColls = $query->sum('Total_Calls');
        $Call_Duration = $query->sum('Call_Duration');
        $Charges = $query->sum('Charges');
        $Cost = $query->sum('Cost');


        $agent = Fscallreport::find()->groupBy(['agent_id'])->where(['between','Date',$start,$end])->all();
        $country = Fscallreport::find()->groupBy(['Country'])->where(['between','Date',$start,$end])->all();
        $Caller_ID = Fscallreport::find()->groupBy(['Caller_ID'])->where(['between','Date',$start,$end])->all();
        $cld1 = Fscallreport::find()->groupBy(['Cld1'])->where(['between','Date',$start,$end])->limit(1000)->all();


        return $this->render('fs_call_report',
            ['dataProvider' => $dataProvider,
            'agent' => $agent,
            'country' => $country,
            'caller_id' => $Caller_ID,
            'cld1' => $cld1,
            'agent_id' => $agent_id,
            'country_name' => $country_name,
            'callerId' => $caller_id,
            'cld_1' => $cld_1,
            'cld1_rate' => $cld1_rate,
            'cld2_rate' => $cld2_rate,
            'totalColls' => $totalColls,
            'Call_Duration' => $Call_Duration,
            'Charges' => $Charges,
            'Cost' => $Cost,
            'Datepickr' => $Datepickr,
            'called_num' => $called_num
        ]);
    }

    /*
    * Load dropdown in seach fields in fscalreport oage
    */
    public function actionLoadSearchFields()
    {
        $agent_optn = "<option value=''>Agent</option>";
        $country_optn = "<option value=''>Country</option>";
        $callerId_optn = "<option value=''>Caller Id</option>";
        $cld1_optn = "<option value=''>Cld1</option>";

        $start = Yii::$app->request->post('start');
        $end = Yii::$app->request->post('end');
//siva
        $mysubusr = User::find()->select('id')->where(['reseller_id' => Yii::$app->user->identity->id]);
        $query = Fscallreport::find()->where([ 'agent_id' => $mysubusr]);
//$query=ModelName::find()->andFilterWhere(['<=', 'start_date',$this->date])->andFilterWhere(['>=', 'end_date',$this->date])->all();  
      $agents = Fscallreport::find()->groupBy(['agent_id'])->where(['between','Date',$start,$end])->andWhere(['agent_id' => $mysubusr])->all();
        $country = Fscallreport::find()->groupBy(['Count

ry'])->where(['between','Date',$start,$end])->all();
        $Caller_ID = Fscallreport::find()->groupBy(['Caller_ID'])->where(['between','Date',$start,$end])->all();
        $cld1 = Fscallreport::find()->groupBy(['Cld1'])->where(['between','Date',$start,$end])->limit(1000)->all();

        if ($agents) {
            foreach ($agents as $value) {
                $agent_optn .= '<option value="'.$value->agent_id.'">'.$value->agent->username.'</option>';
            }
        }

        if ($country) {
            foreach ($country as $value) {
                $country_optn .= '<option value="'.$value->Country.'">'.$value->Country.'</option>';
            }
        }

        if ($Caller_ID) {
            foreach ($Caller_ID as $value) {
                $callerId_optn .= '<option value="'.$value->Caller_ID.'">'.$value->Caller_ID.'</option>';
            }
        }

        if ($cld1) {
            foreach ($cld1 as $value) {
                $cld1_optn .= '<option value="'.$value->Cld1.'">'.$value->Cld1.'</option>';
            }
        }
        return [
            'agent_optn' => $agent_optn,
            'country_optn' => $country_optn,
            'callerId_optn' => $callerId_optn,
            'cld1_optn' => $cld1_optn,

        ];
    }

    /*
    * Export fscall report
    */
    public function actionExportFscall()
    {
        $agent_id = isset($_GET['agent']) ? $_GET['agent'] : '';
        $country_name = isset($_GET['country']) ? $_GET['country'] : '';
        $caller_id = isset($_GET['caller_id']) ? $_GET['caller_id'] : '';
        $cld_1 = isset($_GET['cld1']) ? $_GET['cld1'] : '';
        $cld1_rate = isset($_GET['cld1_rate']) ? $_GET['cld1_rate'] : '';
        $cld2_rate = isset($_GET['cld2_rate']) ? $_GET['cld2_rate'] : '';
        $date_range = isset($_GET['date_range']) ? $_GET['date_range'] : '';
        $called_num = isset($_GET['called_num']) ? $_GET['called_num'] : '';

        if (!empty($date_range) && strlen($date_range) > 2) {
            if (strpos($date_range, ' - ') !== false) {
                $date = explode(' - ', $date_range);
            } else {
                $date = explode('-', $date_range);
            }

            $start = $date[0];
            $end = $date[1];
            //$flag = true;
            //$Datepickr = $start.' - '.$end;
        } else {
            $start = date('Y-m-d');
            $end = date('Y-m-d');
            //$flag = false;
            //$Datepickr = '';
        }
        $Datepickr = $start.' - '.$end;

        $mysubusr = User::find()->select('id')->where(['reseller_id' => Yii::$app->user->identity->id]);
        $query = Fscallreport::find()
        ->where([ 'agent_id' => $mysubusr]);

        $query->andFilterWhere([
            'agent_id' => $agent_id,
            'Country' => $country_name,
            'Caller_ID' => $caller_id,
            'Cld1' => $cld_1,
        ]);
        $query->andFilterWhere(['like','Cld1_Rate' , $cld1_rate])
        ->andFilterWhere(['like', 'Cld2_Rate', $cld2_rate])
        ->andFilterWhere(['like', 'called_number', $called_num]);

        //echo $query->createCommand()->getRawSql(); exit();

        //if ($flag) {
        $query->andFilterWhere(['between', 'Date', $start.' 00:00:00',$end.' 23:59:59']);
        //}

        $query = $query->all();

        if ($query) {

            $filename = "fscall_report.xls";
            header("Content-Type: application/vnd.ms-excel");
            header("Content-Disposition: attachment; filename=\"$filename\"");

            echo 'Date'."\t".'Agent'."\t".'Country'."\t".'Caller ID'."\t".'called_number'."\t".'Cld1'."\t".'Cld1 Rate'."\t".'Cld2 Rate'."\t".'Total Calls'."\t".'Call Duration'."\t".'Charges'."\t".' Cost'."\n";

            foreach($query as $value) {
                echo $value->Date."\t".$value->agent->username."\t".$value->Country."\t".$value->Caller_ID."\t".$value->called_number."\t".$value->Cld1."\t".$value->Cld1_Rate."\t".$value->Cld2_Rate."\t".$value->Total_Calls."\t".$value->Call_Duration."\t".$value->Charges."\t".$value->Cost."\n";
            }
            exit;
        } else {
            return $this->redirect(['fs-call-report']);
        }
    }

    /*
    * Agent wise Summary
    */
    public function actionAgentSummary()
    {
        $agent_id = isset($_GET['agent']) ? $_GET['agent'] : '';
        $country_id = isset($_GET['country']) ? $_GET['country'] : '';
        $date_range = isset($_GET['date_range']) ? $_GET['date_range'] : date('Y-m-d',strtotime("-6 days"))." to ".date('Y-m-d');

        if (strpos($date_range, " to ") !== FALSE) {
            $date = explode(" to ", $date_range);
            $start = $date[0]." 00:00:00";
            $end = $date[1]." 23:59:59";
        } else {
            $start = date('Y-m-d',strtotime("-6 days"))." 00:00:00";
            $end = date('Y-m-d')." 23:59:59";
        }
        $mysubusr = User::find()->select('id')->where(['reseller_id' => Yii::$app->user->identity->id]);
        $query = Fscallreport::find()->select('agent_id,Country,SUM(Total_Calls) As Total_Calls,SUM(Call_Duration) AS Call_Duration,SUM(Charges) AS Charges,SUM(Cost) AS Cost, (SUM(Charges) -SUM(Cost)) AS margin')->groupBy(['Country'])
        ->where([ 'agent_id' => $mysubusr]);
        //echo $query->createCommand()->getRawSql(); exit();

        $dataProvider = new ActiveDataProvider([
            'query' => $query,
            'pagination' => [
                'pageSize' => 100,
            ],
        ]);

        $query->andFilterWhere([
            'agent_id' => $agent_id,
            'Country' => $country_id,
        ]);
        $query->andFilterWhere(['between','Date' , $start,$end]);

        $totalColls = $query->sum('Total_Calls');
        $Call_Duration = $query->sum('Call_Duration');
        $Charges = $query->sum('Charges');
        $Cost = $query->sum('Cost');


        $agent = Fscallreport::find()->groupBy(['agent_id'])->all();
        $country = Fscallreport::find()->groupBy(['Country'])->all();

        return $this->render('agent_summary',['dataProvider' => $dataProvider,'date_range' => $date_range,'agent' => $agent,'country' => $country,'agent_id' => $agent_id,'country_id' => $country_id,'totalColls' => $totalColls,'Call_Duration' => $Call_Duration,'Charges' => $Charges,'Cost' => $Cost]);
    }

    /*
    * Export agent summary report
    */
    public function actionExportAgentSummary()
    {
        $agent_id = isset($_GET['agent']) ? $_GET['agent'] : '';
        $country_name = isset($_GET['country']) ? $_GET['country'] : '';
        $date_range = isset($_GET['date_range']) ? $_GET['date_range'] : date('Y-m-d',strtotime("-6 days"))." to ".date('Y-m-d');

        if (strpos($date_range, " to ") !== FALSE) {
            $date = explode(" to ", $date_range);
            $start = $date[0]." 00:00:00";
            $end = $date[1]." 23:59:59";
        } else {
            $start = date('Y-m-d',strtotime("-6 days"))." 00:00:00";
            $end = date('Y-m-d')." 23:59:59";
        }

        $mysubusr = User::find()->select('id')->where(['reseller_id' => Yii::$app->user->identity->id]);
        $query = Fscallreport::find()->select('agent_id,Country,SUM(Total_Calls) As Total_Calls,SUM(Call_Duration) AS Call_Duration,SUM(Charges) AS Charges,SUM(Cost) AS Cost, (SUM(Charges) -SUM(Cost)) AS margin')->groupBy(['Country'])
        ->where([ 'agent_id' => $mysubusr]);
        $query->andFilterWhere([
            'agent_id' => $agent_id,
            'Country' => $country_name,
        ]);
        $query->andFilterWhere(['between','Date' , $start,$end]);

        $query = $query->all();

        if ($query) {

            $filename = "agent_summary_report.xls";
            header("Content-Type: application/vnd.ms-excel");
            header("Content-Disposition: attachment; filename=\"$filename\"");

            echo 'Agent'."\t".'Country'."\t".'Total Calls'."\t".'Total Minutes'."\t".'Total Charges'."\t".'Total Agent Cost'."\t".'Margin'."\n";

            foreach($query as $value) {
                echo $value->agent->username."\t".$value->Country."\t".$value->Total_Calls."\t".$value->Call_Duration."\t".$value->Charges."\t".$value->Cost."\t".$value->margin."\n";
            }
            exit;
        } else {
            return $this->redirect(['agent-summary']);
        }
    }


}
